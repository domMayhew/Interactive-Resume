@use '@angular/material' as mat;
@use 'sass:map';

// Palettes
$palette-primary: mat.define-palette(mat.$indigo-palette);
$palette-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$palette-warn: mat.define-palette(mat.$red-palette);

// Typography
$typography: mat.define-typography-config($font-family: Inconsolata);

$theme: mat.define-light-theme((color: (primary: $palette-primary,
        accent: $palette-accent,
        warn: $palette-warn,
      ),
      typography: $typography));

$theme-sans-serif: mat.define-light-theme((color: (primary: $palette-primary,
        accent: $palette-accent,
        warn: $palette-warn,
      ),
      typography: mat.define-typography-config($font-family: Roboto)));


@mixin get-typography($level, $requested-theme: $theme) {
  $typography-config: mat.get-typography-config($requested-theme);

  font: {
    family: mat.font-family($typography-config, $level);
    size: mat.font-size($typography-config, $level);
    weight: mat.font-weight($typography-config, $level);
  }
}

@mixin get-font-family($level) {
  $typography-config: mat.get-typography-config($theme);
  font-family: mat.font-family($typography-config, $level);
}

@function get-color($palette, $hue) {
  $color-config: mat.get-color-config($theme);
  $palette: map.get($color-config, $palette);
  $color: mat.get-color-from-palette($palette, $hue);
  @return $color;

}